# docker container ls
	=> list my containers 
# docker container run --detach --publish 80:80 --name n1 nginx
	=> run container server in port 80 in the backround with the name n1
# docker run hello-world 
	=> pull the image from the docker hope and run the container
# docker ps -all 
	=> list the containers
# docker rm <container id>
	=> remove the container
# docker container run redis 
	=> pull the image redis and run the container
# docker incpect <image>
	=> get infos about the image
# docker logs <id>
	=> get infos about what happen in the image
# docker info
	=> see info about the docker
# docker inscpect --format='{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' <container id> || <container name>
	=> get the container ip
# docker container stop <container name>
	=> stop container 
# docker container start <container name>
	=> start container
# docker exec -it <container name> <commande>
	=> execute the command inside the container 
# docker history redis
# docker tags <image name> username/imagename
	=> create new image with my ohne tag
# docker push new-image-name
# docker login 
	=> log to my account
# docker build -tag image-name <path of dockerfile>
	=> create our costom image using dockerfile
# docker volume ls 
	=> list all volume
# docker run -d --name mariadbnew -e MARIADB_ROOT_PASSWORD=1234 -v mariavolume:/var/lib/mysql mariadb
# docker volume create maria-vol 
	=> create new volume called maria-vol
# docker rmi $(docker images -aq)
	=> Cleanup: Delete all images on the host
# -p 3000:3000
	=> open port 3000 on host and 3000 on the container
# image:<tage>
	=> give the image a tag
